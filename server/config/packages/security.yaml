security:
    enable_authenticator_manager: true

    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: login
        jwt:
            lexik_jwt: ~


    firewalls:
        id:
            provider: app_user_provider
            pattern: ^/api/login_check
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        refresh:
            provider: app_user_provider
            pattern: ^/api/token/refresh
            stateless: true
            refresh_jwt: ~
        api:
            provider: jwt
            pattern:   ^/api
            stateless: true
            jwt: ~
        dev:
            provider: app_user_provider
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false


    access_control:
        - { path: ^/api/(login_check|token/refresh|registration), roles: PUBLIC_ACCESS }
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]